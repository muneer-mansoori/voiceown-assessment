apiVersion: v1
kind: ConfigMap
metadata:
  name: fluentd-config
  namespace: secure-app
data:
  fluent.conf: |
    <source>
      @type tail
      path /var/log/containers/api-*.log,/var/log/containers/mongo-*.log
      pos_file /var/log/fluentd-app.log.pos
      tag app.*
      <parse>
        @type none
      </parse>
      read_from_head true
    </source>
    
    <filter app.**>
      @type record_transformer
      <record>
        service ${tag_parts[1]}
        timestamp ${time}
      </record>
    </filter>
    
    <match app.**>
      @type elasticsearch
      host elasticsearch
      port 9200
      index_name app-logs
      suppress_type_name true
      <buffer>
        flush_mode immediate
      </buffer>
    </match>
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fluentd
  namespace: secure-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: fluentd
  template:
    metadata:
      labels:
        app: fluentd
    spec:
      serviceAccountName: fluentd-sa
      containers:
      - name: fluentd
        image: fluent/fluentd-kubernetes-daemonset:v1-debian-elasticsearch
        env:
        - name: FLUENT_ELASTICSEARCH_HOST
          value: "elasticsearch"
        - name: FLUENT_ELASTICSEARCH_PORT
          value: "9200"
        volumeMounts:
        - name: varlog
          mountPath: /var/log
        - name: varlibdockercontainers
          mountPath: /var/lib/docker/containers
          readOnly: true
        - name: config
          mountPath: /fluentd/etc/fluent.conf
          subPath: fluent.conf
        resources:
          requests:
            cpu: 10m
            memory: 50Mi
          limits:
            cpu: 50m
            memory: 100Mi
      volumes:
      - name: varlog
        hostPath:
          path: /var/log
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers
      - name: config
        configMap:
          name: fluentd-config
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: elasticsearch
  namespace: secure-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: elasticsearch
  template:
    metadata:
      labels:
        app: elasticsearch
    spec:
      containers:
      - name: elasticsearch
        image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
        env:
        - name: discovery.type
          value: single-node
        - name: xpack.security.enabled
          value: "false"
        - name: ES_JAVA_OPTS
          value: "-Xms512m -Xmx512m"
        ports:
        - containerPort: 9200
        resources:
          requests:
            cpu: 100m
            memory: 512Mi
          limits:
            cpu: 200m
            memory: 1Gi
        volumeMounts:
        - name: elasticsearch-data
          mountPath: /usr/share/elasticsearch/data
      volumes:
      - name: elasticsearch-data
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: elasticsearch
  namespace: secure-app
spec:
  selector:
    app: elasticsearch
  ports:
  - port: 9200
    targetPort: 9200
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kibana
  namespace: secure-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kibana
  template:
    metadata:
      labels:
        app: kibana
    spec:
      containers:
      - name: kibana
        image: docker.elastic.co/kibana/kibana:8.11.0
        env:
        - name: ELASTICSEARCH_HOSTS
          value: "http://elasticsearch:9200"
        ports:
        - containerPort: 5601
        resources:
          requests:
            cpu: 50m
            memory: 512Mi
          limits:
            cpu: 200m
            memory: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: kibana
  namespace: secure-app
spec:
  selector:
    app: kibana
  ports:
  - port: 5601
    targetPort: 5601
  type: LoadBalancer